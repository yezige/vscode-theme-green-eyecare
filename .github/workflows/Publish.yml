name: Publish

on:
  push:
    tags:
      - "**"
      - "!**-alpha"
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [13.x]
    steps:
      - uses: actions/checkout@v2

      # RELEASE_TAG: v0.0.1
      # RELEASE_VERSION: 0.0.1
      - name: Set env
        run: |
          echo "RELEASE_TAG=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$(echo ${GITHUB_REF##*/v})" >> $GITHUB_ENV
          echo "::debug::TAG: ${{ env.RELEASE_TAG }}"

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install vsce
        run: |
          npm install -g vsce

      - name: Publish
        env:
          VSCE_USER: ${{ secrets.VSCE_USER }}
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
        run: |
          vsce publish ${{ env.RELEASE_VERSION }} -p ${VSCE_TOKEN} 

      - name: Package
        id: package
        run: |
          vsce package
          zip vscode-theme-green-eyecare-${{ env.RELEASE_VERSION }}.zip *.vsix
          ls -al
          echo "::set-output name=filename::vscode-theme-green-eyecare-${{ env.RELEASE_VERSION }}.zip"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.package.outputs.filename }}
          asset_name: ${{ steps.package.outputs.filename }}
          asset_content_type: application/zip
